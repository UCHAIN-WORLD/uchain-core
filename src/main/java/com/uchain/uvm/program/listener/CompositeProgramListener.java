package com.uchain.uvm.program.listener;import com.google.common.collect.Lists;import com.uchain.uvm.DataWord;import java.util.List;public class CompositeProgramListener implements ProgramListener{    private List<ProgramListener> listeners = Lists.newArrayList();    @Override    public void onMemoryExtend(int delta) {        listeners.stream().forEach(listener->listener.onMemoryExtend(delta));    }    @Override    public void onMemoryWrite(int address, byte[] data, int size) {        listeners.stream().forEach(listener->listener.onMemoryWrite(address,data,size));    }    @Override    public void onStackPop() {        listeners.stream().forEach(listener->listener.onStackPop());    }    @Override    public void onStackPush(DataWord value) {        listeners.stream().forEach(listener->listener.onStackPush(value));    }    @Override    public void onStackSwap(int from, int to) {        listeners.stream().forEach(listener->listener.onStackSwap(from, to));    }    @Override    public void onStoragePut(DataWord key, DataWord value) {        listeners.stream().forEach(listener->listener.onStoragePut(key, value));    }    @Override    public void onStorageClear() {        listeners.stream().forEach(listener->listener.onStorageClear());    }    public void addListener(ProgramListener listener) {        listeners.add(listener);    }    public boolean isEmpty() {        return listeners.isEmpty();    }}