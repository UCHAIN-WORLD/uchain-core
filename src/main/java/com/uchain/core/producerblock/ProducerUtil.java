package com.uchain.core.producerblock;import com.uchain.cryptohash.BinaryData;import com.uchain.cryptohash.PublicKey;import com.uchain.main.ConsensusSettings;import com.uchain.main.Witness;public class ProducerUtil {    /**     * 获取给定时间点的生产者     *     * @param timeMs time from 1970 in ms     * @return     */    public static Witness getWitness(Long timeMs, ConsensusSettings settings) {        long slot = timeMs / settings.getProduceInterval();        long index = slot % (settings.getWitnessList().size() * settings.getProducerRepetitions());        index /= settings.getProducerRepetitions();        return settings.getWitnessList().get((int) index); //获取    }    public static Boolean isTimeStampValid(Long timeStamp, ConsensusSettings settings) {        if (timeStamp % settings.getProduceInterval() == 0)            return true;        else            return false;    }    public static Boolean isProducerValid(Long timeStamp, PublicKey producer, ConsensusSettings settings) {        boolean isValid = false;        if (PublicKey.apply(new BinaryData(getWitness(timeStamp, settings).getPubkey())).toBin().equals(producer.toBin())){            if (isTimeStampValid(timeStamp, settings)) {                isValid = true;            }        }        return isValid;    }}