package com.uchain.core.datastore.keyvalue;import com.uchain.core.consensus.ForkItem;import lombok.val;import java.io.ByteArrayInputStream;import java.io.ByteArrayOutputStream;import java.io.DataInputStream;import java.io.DataOutputStream;public class ForkItemValue implements Converter<ForkItem> {    @Override    public byte[] toBytes(ForkItem key) {        val bs = new ByteArrayOutputStream();        val os = new DataOutputStream(bs);        serializer(key,os);        return bs.toByteArray();    }    @Override    public ForkItem fromBytes(byte[] bytes) {        val bs = new ByteArrayInputStream(bytes);        val is = new DataInputStream(bs);        return ForkItem.deserialize(is);    }    @Override    public ForkItem deserializer(DataInputStream is) {        return ForkItem.deserialize(is);    }    @Override    public void serializer(ForkItem key, DataOutputStream os) {        key.serialize(os);    }}