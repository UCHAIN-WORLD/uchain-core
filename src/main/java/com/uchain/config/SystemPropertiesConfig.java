package com.uchain.config;import com.uchain.config.blockchain.MainNetConfig;public class SystemPropertiesConfig {    private static BlockchainNetConfig blockchainConfig;    public static BlockchainNetConfig getBlockchainConfig() {        if (blockchainConfig == null) {//            GenesisJson genesisJson = getGenesisJson();//            if (genesisJson.getConfig() != null && genesisJson.getConfig().isCustomConfig()) {//                blockchainConfig = new JsonNetConfig(genesisJson.getConfig());//            } else {//                if (config.hasPath("blockchain.config.name") && config.hasPath("blockchain.config.class")) {//                    throw new RuntimeException("Only one of two options should be defined: 'blockchain.config.name' and 'blockchain.config.class'");//                }//                if (config.hasPath("blockchain.config.name")) {//                    switch (config.getString("blockchain.config.name")) {//                        case "main":                            blockchainConfig = new MainNetConfig();//                            break;//                        case "olympic"://                            blockchainConfig = new OlympicConfig();//                            break;//                        case "morden"://                            blockchainConfig = new MordenNetConfig();//                            break;//                        case "ropsten"://                            blockchainConfig = new RopstenNetConfig();//                            break;//                        case "testnet"://                            blockchainConfig = new TestNetConfig();//                            break;//                        default://                            throw new RuntimeException("Unknown value for 'blockchain.config.name': '" + config.getString("blockchain.config.name") + "'");//                    }//                } else {//                    String className = config.getString("blockchain.config.class");//                    try {//                        Class<? extends BlockchainNetConfig> aClass = (Class<? extends BlockchainNetConfig>) classLoader.loadClass(className);//                        blockchainConfig = aClass.newInstance();//                    } catch (ClassNotFoundException e) {//                        throw new RuntimeException("The class specified via blockchain.config.class '" + className + "' not found", e);//                    } catch (ClassCastException e) {//                        throw new RuntimeException("The class specified via blockchain.config.class '" + className + "' is not instance of BlockchainForkConfig", e);//                    } catch (InstantiationException | IllegalAccessException e) {//                        throw new RuntimeException("The class specified via blockchain.config.class '" + className + "' couldn't be instantiated (check for default constructor and its accessibility)", e);//                    }//                }//            }////            if (genesisJson.getConfig() != null && genesisJson.getConfig().headerValidators != null) {//                for (GenesisConfig.HashValidator validator : genesisJson.getConfig().headerValidators) {//                    BlockHeaderValidator headerValidator = new BlockHeaderValidator(new BlockCustomHashRule(ByteUtil.hexStringToBytes(validator.hash)));//                    blockchainConfig.getConfigForBlock(validator.number).headerValidators().add(//                            Pair.of(validator.number, headerValidator));//                }//            }        }        return blockchainConfig;    }    public static void setBlockchainConfig(BlockchainNetConfig config) {        blockchainConfig = config;    }}